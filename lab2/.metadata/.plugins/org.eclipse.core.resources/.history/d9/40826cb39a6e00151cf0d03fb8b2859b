/*
 * memory.cpp
 *
 *  Created on: Oct 7, 2015
 *      Author: parallels
 */
#ifndef MEMORY_CPP_
#define MEMORY_CPP_
#include <iostream>     // std::cout
#include <fstream>      // std::ifstream
#include "systemc.h"
#include <stdio.h>
#include "string.h"
//#include "errno.h"
using namespace std;

SC_MODULE(memory) {
	sc_inout<sc_lv<8> > data;  //
	sc_inout<int> addr_last;
	sc_in<int> address;
	sc_in<bool> we;
	sc_in<bool> ce;

	int MEMSIZE;

	string in_name;
//	unsigned int *mem_temp = new unsigned int[MEMSIZE];
	string *mem_temp = new string[MEMSIZE];
	SC_HAS_PROCESS(memory);
	memory(sc_module_name name, int size, string in_name) :
			sc_module(name), MEMSIZE(size), in_name(in_name) {
		ce =1;
		SC_THREAD(entry);
	//	SC_METHOD(memread);
		sensitive << ce << we << address;
	}
	void entry();
	void memread();
	void memwrite();
};

#endif /* MEMORY_CPP_ */
